# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.venv_pub/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# =============================================================================
# PROJECT SPECIFIC IGNORES
# =============================================================================

# Model files and directories (very large files)
smart_pub/models/
models/
*.bin
*.safetensors
*.onnx
*.gguf
*.pth
*.pt
model*.tar.gz
model*.tar.gz.part_*

# Data files
smart_pub/data/
data/
datasets/
*.csv
*.json
*.jsonl
*.parquet
*.feather
*.pickle
*.pkl

# Vector databases
smart_pub/vector_db/
vector_db/
*.faiss
*.index
chromadb/
*.db

# Results and outputs
smart_pub/results/
results/
outputs/
logs/
*.log
evaluation_results_*.json
evaluation_results_*.csv
model_evaluation_*.json
model_evaluation_*.csv

# Temporary files
temp/
tmp/
cache/
.cache/
*.tmp
*.temp

# Compressed files
*.zip
*.tar
*.tar.gz
*.tar.bz2
*.7z
*.rar

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Configuration files with sensitive data
config_local.py
secrets.py
.secrets
api_keys.txt

# Hugging Face cache
.cache/huggingface/
~/.cache/huggingface/

# PyTorch cache
.cache/torch/

# CUDA cache
.nv/

# Large test files
test_data/
sample_data/

# Performance profiling
*.prof
*.profile

# Memory dumps
*.dump
*.dmp

# Large language model specific
*.model
*.tokenizer
pytorch_model-*.bin
model-*.safetensors
tf_model.h5
flax_model.msgpack

# Optimized models
*-int8/
*-int4/
*-onnx/
optimized_models/

# Training checkpoints
checkpoints/
runs/
wandb/

# Backup files
*.bak
*.backup
*.old

# Documentation builds
docs/build/
docs/_build/

# Local environment variables
.env.local
.env.development
.env.production

# Package manager files
poetry.lock
Pipfile.lock

# Conda environments
environment.yml